{"ast":null,"code":"import { TOGGLE_TABLE } from '../constants/constants.js';\nvar initialTableData = [];\n\nfor (let i = 0; i < 16; i++) {\n  initialTableData.push([]);\n}\n\nconst tableStatusData = (state = initialTableData, action) => {\n  switch (action.type) {\n    case TOGGLE_TABLE:\n      var stateCopy = state.slice();\n      stateCopy[action.id] = !stateCopy[action.id];\n      return stateCopy;\n\n    default:\n      return state;\n  }\n};\n/*\r\nThe tableStatusData reducer is in charge of handling the state changes to \r\nthe tableStatusData attribue of the overall state. The tableStatusData state\r\nshould be an boolean array of the size 16 that represents whether each of \r\nthe 16 tables is checked in or not. The state array is initialized to contain \r\nall false values. The reducer only handles the TOGGLE_TABLE action. In the\r\nTOGGLE_TABLE action logic, we make a copy of the state using slice() and then\r\ntoggle the boolean value of the targeted index before returning the copy.\r\n*/\n\n\nexport default tableStatusData;","map":{"version":3,"sources":["/mnt/c/Users/Lucas/Projects/edx/react-router-redux/restaurant-mgmt-system/src/reducers/tableStatusData.js"],"names":["TOGGLE_TABLE","initialTableData","i","push","tableStatusData","state","action","type","stateCopy","slice","id"],"mappings":"AAAA,SAASA,YAAT,QAA6B,2BAA7B;AAEA,IAAIC,gBAAgB,GAAG,EAAvB;;AAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA4B;AAC3BD,EAAAA,gBAAgB,CAACE,IAAjB,CAAsB,EAAtB;AACA;;AAED,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAGJ,gBAAT,EAA2BK,MAA3B,KAAsC;AAC7D,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKP,YAAL;AACC,UAAIQ,SAAS,GAAGH,KAAK,CAACI,KAAN,EAAhB;AACAD,MAAAA,SAAS,CAACF,MAAM,CAACI,EAAR,CAAT,GAAuB,CAACF,SAAS,CAACF,MAAM,CAACI,EAAR,CAAjC;AACA,aAAOF,SAAP;;AACD;AACC,aAAOH,KAAP;AANF;AAQA,CATD;AAWA;;;;;;;;;;;AAUA,eAAeD,eAAf","sourcesContent":["import { TOGGLE_TABLE } from '../constants/constants.js';\r\n\r\nvar initialTableData = [];\r\n\r\nfor (let i = 0; i < 16; i++){\r\n\tinitialTableData.push([]);\r\n}\r\n\r\nconst tableStatusData = (state = initialTableData, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase TOGGLE_TABLE:\r\n\t\t\tvar stateCopy = state.slice();\r\n\t\t\tstateCopy[action.id] = !stateCopy[action.id];\r\n\t\t\treturn stateCopy;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n/*\r\nThe tableStatusData reducer is in charge of handling the state changes to \r\nthe tableStatusData attribue of the overall state. The tableStatusData state\r\nshould be an boolean array of the size 16 that represents whether each of \r\nthe 16 tables is checked in or not. The state array is initialized to contain \r\nall false values. The reducer only handles the TOGGLE_TABLE action. In the\r\nTOGGLE_TABLE action logic, we make a copy of the state using slice() and then\r\ntoggle the boolean value of the targeted index before returning the copy.\r\n*/\r\n\r\nexport default tableStatusData;"]},"metadata":{},"sourceType":"module"}